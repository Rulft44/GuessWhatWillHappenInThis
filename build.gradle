plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'maven-publish'
	id 'application'
	id 'com.github.johnrengelman.shadow' version '7.1.0'
    id 'io.github.juuxel.loom-quiltflower' version '1.7.+'
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

apply from: 'resources.gradle'

loom {
    runtimeOnlyLog4j = true
}

repositories {
	maven { url 'https://maven.terraformersmc.com/releases/' }
	maven { url 'https://maven.shedaniel.me/' }
    maven {	url 'https://repo.repsy.io/mvn/enderzombi102/mc/' }
    //maven { url 'https://storage.googleapis.com/devan-maven/' } // seems to be an old repository for AARP? it doesnt exist anymore
    //maven { url 'https://ueaj.dev/maven' } // this is apparently where AARP is supposed to reside now, but at the time of writing (Oct 7 2023) its https is broken and therefore doesnt work
    // because of the things outlined above, ive had to resort to using curseforge maven, and a different version of AARP. my apologies
    maven {
    	url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven { url 'https://gitlab.com/api/v4/projects/25805200/packages/maven' } //https://gitlab.com/jfmods/LibJF
    maven { url 'https://api.modrinth.com/maven' }
    mavenCentral()
}

dependencies {
    def noFAPI = {
        exclude(group: 'net.fabricmc.fabric-api')
    }

    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:$minecraft_version"
    mappings "net.fabricmc:yarn:$minecraft_version+$yarn_mappings:v2"
    modImplementation "net.fabricmc:fabric-loader:$loader_version"
    modImplementation "net.fabricmc.fabric-api:fabric-api:$fabric_version"

    modRuntimeOnly modApi("me.shedaniel.cloth:cloth-config-fabric:$cloth_config_version", noFAPI)
    modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:$rei_version"
    
    // ive had to change this to use curseforge (ew) for the time being due to broken maven nonsense
    //include modImplementation("net.devtech:arrp:$arrp_version") // this should be able to be uncommented once the maven is fixed https://github.com/Devan-Kerman/ARRP/issues/92
    include modImplementation("curse.maven:arrp-463113:3680866-sources-3680393")
    
    include modImplementation("com.enderzombi102:JythonMC:$jythonmc_version")

    compileOnly "com.enderzombi102:loadercomplex-api:$lc_version"
    modImplementation "maven.modrinth:valleycraft:$valleycraft_version"
    modImplementation("com.terraformersmc:modmenu:$modmenu_version") {
        transitive(false)
    }

    include modImplementation("io.gitlab.jfronny.libjf:libjf-data-manipulation-v0:${project.jfapi_version}", noFAPI)
    include modImplementation("io.gitlab.jfronny.libjf:libjf-unsafe-v0:${project.jfapi_version}", noFAPI)
    include "io.gitlab.jfronny.libjf:libjf-base:${project.jfapi_version}"
    modRuntimeOnly "io.gitlab.jfronny.libjf:libjf-devutil-v0:${project.jfapi_version}", noFAPI


    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

application {
	mainClass = 'fr.anatom3000.gwwhit.commandline.CommandLine'
}

processResources {
    inputs.property 'version', version
    inputs.property 'codename', project.ext.codename

	filesMatching('fabric.mod.json') {
		expand([
            'version': version,
            'codename': project.ext.codename
		])
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from('LICENSE') {
		rename {"${it}_$archivesBaseName"}
	}

	manifest.attributes += [
        'Main-Class': 'fr.anatom3000.gwwhit.commandline.CommandLine',
        'LoaderComplex-AddonId': 'gwwhit',
        'LoaderComplex-Version': archiveVersion,
        'LoaderComplex-Main': 'fr.anatom3000.gwwhit.compat.LoaderComplexCompat'
    ]

    exclude('fr/anatom3000/gwwhit/DevUtils*')
}

shadowJar {
	dependencies {
		include( dependency('com.google.code.gson:gson') )
	}

	minimize()
}

test {
    useJUnitPlatform()
}

//noinspection UnnecessaryQualifiedReference // The import kept breaking
task relocateShadowJar(type: com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation) {
	target = tasks.shadowJar
	prefix = 'fr.anatom3000.gwwhit.shadow'

}
tasks.shadowJar.dependsOn tasks.relocateShadowJar
